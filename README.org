# Created 2023-04-14 Fri 11:44
#+options: tex:t
#+title: org-incremental
#+author: Daniel Otto
#+brain_friends: 1917a9f7-ee66-4023-a0ff-f9e52a0970c1 incremental_reading
#+brain_parents: system literate-projects
#+property: header-args :noweb yes
#+filetags: incremental
#+org_incremental: t

#+latex_header: \usepackage{tikz}
#+latex_header: \usepackage{svg}
This package is designed to bring [[https://supermemo.guru/wiki/Incremental_writing][incremental writing]], [[https://help.supermemo.org/wiki/Incremental_mail_processing][incremental mail processing]] and incremental [[http://www.literateprogramming.com/][literate programming]] capabilities to org-mode and Emacs.

It works with [[https://github.com/alphapapa/org-ql][org-ql]] in order to find and generate lists of included files.

Key functions we would need:
- A-factor
- Priority
- Postpone/Reschedule (Intra- and inter-day)
- Dismissing (of files and sub-headers)
- Mercy
- TODO keywords: ("to write", "to expand", "to rewrite", "to review", "finished")
- Statistical analysis to chart the progress through the writing material (~magit~ and ~calendar~)
- Outstanding headline sorting by priority to match circadian cycles (high for high alertness and low for end of day)

Features:

- *Incremental literate programming* with org-mode and SM's algorithm!
- *Incremental writing of email with tools like ~mu4e~!*
- *Deadline awareness* (modify priority/a-factor/scheduled date based on distance to deadline)



* Overview

** PROJECT Why incremental writing?
Incremental writing is a concept co-developed by Piotr Wozniak and [[https://supermemopedia.com/wiki/How_I_use_creative_elaboration_with_the_help_of_incremental_reading][users of Supermemo]] employing the topic spacing feature to break writing projects into sub-chapters, as a form of creative elaboration.

Woz [[http://help.supermemo.org/wiki/Creativity_and_problem_solving_in_SuperMemo#Incremental_writing][writes]]:
#+begin_quote
(Texts)... may be bloated and repetitive, however, with incremental reading, they can be prioritized in a rational way. *Incremental writing leaves the texts highly granular and the flow of thought is jagged*, however ... this is an advantage as all individual articles and subarticles *carry sufficient local context to be read independently*.
#+end_quote

The above relates to the granularity of articles written using IW lending itself to IR as extracts tend to be discrete. In the context of incremental literate programming, I believe the contextualisation provided by prose encapsulated in subheadings offer these same advantages while also then allowing us to use the spacing effect over blocks of code. Org-mode's narrowing and widening features further help to constrain or expand context in the flow of IW.

*** DONE Read Incremental writing page
https://www.masterhowtolearn.com/2020-06-09-incremental-writing-no-more-writer-block/
https://help.supermemo.org/wiki/Incremental_learning#Incremental_writing
https://www.masterhowtolearn.com/2020-08-09-the-magic-behind-incremental-writing-spacing-and-interleaving/

** Getting started
Example configuration:

#+begin_src elisp
(use-package org-incremental
  :config
  (setq org-incremental-todo-keywords '("NEXT")))
#+end_src
